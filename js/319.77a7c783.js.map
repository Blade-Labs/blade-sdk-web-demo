{"version":3,"file":"js/319.77a7c783.js","mappings":"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","sources":["webpack://blade-sdk-web-demo/./src/components/AppTabs.vue","webpack://blade-sdk-web-demo/./src/components/AppTabs.vue?e2a7","webpack://blade-sdk-web-demo/./src/views/Account.vue?8d54","webpack://blade-sdk-web-demo/./src/views/Account.vue","webpack://blade-sdk-web-demo/./src/views/Account.vue?727f"],"sourcesContent":["<template>\n  <ul class=\"flex flex-wrap gap-2 text-sm font-medium text-center text-gray-500 border-b border-gray-200 mb-6\">\n    <li\n      v-for=\"tab in tabs\"\n      :key=\"tab.value\"\n    >\n      <button \n        class=\"inline-block p-4 rounded-t-lg hover:text-gray-600 hover:bg-gray-50\"\n        :class=\"{'text-indigo-600 bg-gray-100': isActive === tab.value}\"\n        @click=\"selectActiveTab(tab.value)\"\n      >\n        {{ tab.name }}\n      </button>\n\n    </li>\n</ul>\n</template>\n\n<script setup>\n  import { ref, onMounted, defineProps, defineEmits } from 'vue'\n\n  const props = defineProps({\n    tabs: Array,\n  })\n\n  const emit = defineEmits(['selectActiveTab'])\n\n  const isActive = ref(null)\n\n  const selectActiveTab = (tabValue) => {\n    props.tabs.forEach((tab) => {\n      if (tab.value === tabValue) {\n        isActive.value = tabValue\n\n        emit('selectActiveTab', isActive.value)\n      }\n    })\n  }\n\n  onMounted(() => {\n    selectActiveTab(props.tabs[0].value)\n  })\n</script>\n\n<style>\n\n</style>","import script from \"./AppTabs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AppTabs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, unref as _unref, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, vShow as _vShow, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"block mb-6 text-sm font-medium text-gray-600\" }, \" This section provides a brief introduction to the Blade SDK demo app, highlighting its purpose and key features. \", -1)\nconst _hoisted_2 = { class: \"flex gap-4 flex-wrap mb-6 items-end\" }\nconst _hoisted_3 = { class: \"max-w-sm w-full\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"tempAccountId\",\n  class: \"block mb-2 text-sm font-medium text-gray-900\"\n}, \"Account Id\", -1)\nconst _hoisted_5 = [\"disabled\"]\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = { class: \"flex gap-4 flex-wrap mb-6 items-end\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"block mb-6 text-sm font-medium text-gray-600\" }, \" Facilitates importing an existing account using a private key or mnemonic phrase. \", -1)\nconst _hoisted_11 = { class: \"flex gap-4 flex-wrap mb-6 items-end\" }\nconst _hoisted_12 = { class: \"max-w-sm w-full\" }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"mnemonic\",\n  class: \"block mb-2 text-sm font-medium text-gray-900\"\n}, \"Mnemonic / Message / Signature\", -1)\nconst _hoisted_14 = [\"disabled\"]\nconst _hoisted_15 = [\"disabled\"]\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"block mb-6 text-sm font-medium text-gray-600\" }, \" Enables staking functionalities, including fetching the node list and performing stake/unstake actions. \", -1)\nconst _hoisted_17 = { class: \"flex gap-4 flex-wrap mb-6 items-end\" }\nconst _hoisted_18 = { class: \"max-w-sm w-full\" }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"accountId\",\n  class: \"block mb-2 text-sm font-medium text-gray-900\"\n}, \"Account Id\", -1)\nconst _hoisted_20 = { class: \"max-w-sm w-full\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"stake\",\n  class: \"block mb-2 text-sm font-medium text-gray-900\"\n}, \"Select a node\", -1)\nconst _hoisted_22 = [\"disabled\"]\nconst _hoisted_23 = [\"value\"]\nconst _hoisted_24 = [\"disabled\"]\nconst _hoisted_25 = { class: \"flex gap-4 flex-wrap mb-6 items-end\" }\nconst _hoisted_26 = [\"disabled\"]\n\nimport AppOutput from '../components/AppOutput.vue'\n  import AppTabs from '../components/AppTabs.vue'\n  import AppLinksList from '../components/AppLinksList.vue'\n\n  import { demoConfig } from '../config/demoConfig'\n  import { BladeService } from '../services/BladeService'\n\n  import { ref, onMounted } from 'vue'\n  import { useStore } from 'vuex'\n\n  \nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Account',\n  setup(__props) {\n\n  const store = useStore()\n\n  const bladeSDK = BladeService.getInstance()\n\n  const output = ref(store.state.output)\n  const progress = ref(false)\n\n  const accountId = ref(demoConfig.accountId)\n  const tempAccountId = ref(demoConfig.accountId)\n  const mnemonic = ref(demoConfig.mnemonic)\n\n  const stakes = ref([\n    { name: 'Unstake', value: '-1' },\n  ])\n  const stake = ref('-1')\n  const tabs = ref([\n    { name: 'Create', value: 'create' },\n    { name: 'Mnemonic or Private key', value: 'import' },\n    { name: 'Stake', value: 'stake' }\n  ])\n  const activeTab = ref(null)\n\n  const links = ref([\n    { url: 'getaccountinfo', name: 'Get Account Info' },\n    { url: 'createaccount', name: 'Create Account' },\n    { url: 'deleteaccount', name: 'Delete Account' },\n    { url: 'searchaccounts', name: 'Search Accounts' },\n    { url: 'staketonode', name: 'Stake To Node' },\n    { url: 'getnodelist', name: 'Get Node List' },\n  ])\n\n  const selectActiveTab = (value: any) => {\n    activeTab.value = value\n\n    getInfo()\n  }\n\n  const createAccount = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.createAccount()\n\n      tempAccountId.value = output.value.accountId\n\n      store.dispatch('setTempAccount', output.value)\n      store.dispatch('setAccount')\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false;\n  }\n\n  const getAccountInfo = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.getAccountInfo(accountId.value)\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const deleteAccount = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.deleteAccount(store.state.tempAccount.accountId, store.state.tempAccount.privateKey, demoConfig.accountId, demoConfig.accountId, demoConfig.privateKey)\n      store.dispatch('setTempAccount', null)\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const getNodeList = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.getNodeList()\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const stakeToNode = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.stakeToNode(accountId.value, demoConfig.privateKey, Number(stake.value))\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const searchAccounts = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.searchAccounts(mnemonic.value)\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const getInfo = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.getInfo()\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  onMounted(async() => {\n    getInfo()\n\n    if (store.state.isInit) {\n      const nodeList = await bladeSDK.getNodeList()\n  \n      nodeList.nodes.forEach((node: any) => {\n        stakes.value.push({\n          name: `${node.node_id}: ${node.description}`,\n          value: node.node_id\n        })\n      })\n\n      const accountInfo = await bladeSDK.getAccountInfo(accountId.value)\n\n      stake.value = String(accountInfo?.stakingInfo?.stakedNodeId)\n    }\n  })\n\nreturn (_ctx: any,_cache: any) => {\n  const _directive_tooltip = _resolveDirective(\"tooltip\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(AppTabs, {\n      tabs: tabs.value,\n      onSelectActiveTab: selectActiveTab\n    }, null, 8, [\"tabs\"]),\n    _withDirectives(_createElementVNode(\"div\", null, [\n      _hoisted_1,\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _hoisted_4,\n          _withDirectives(_createElementVNode(\"input\", {\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((tempAccountId).value = $event)),\n            type: \"text\",\n            id: \"tempAccountId\",\n            class: _normalizeClass([\"bg-gray-50 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\", !_unref(store).state.isInit ? 'text-gray-400 cursor-not-allowed' : 'text-gray-900']),\n            disabled: !_unref(store).state.isInit\n          }, null, 10, _hoisted_5), [\n            [_vModelText, tempAccountId.value]\n          ])\n        ]),\n        _createElementVNode(\"button\", {\n          class: _normalizeClass([\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\", !_unref(store).state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600']),\n          type: \"button\",\n          disabled: !_unref(store).state.isInit,\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (getAccountInfo()))\n        }, \" Get Account Info \", 10, _hoisted_6)\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"button\", {\n          class: _normalizeClass([\"max-h-10 text-white focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\", !_unref(store).state.isInit || _unref(store).state.isAccount ? 'bg-green-300 hover:bg-green-500 cursor-not-allowed' : 'bg-green-500 hover:bg-green-600']),\n          disabled: !_unref(store).state.isInit || _unref(store).state.isAccount,\n          type: \"button\",\n          onClick: _cache[2] || (_cache[2] = ($event: any) => (createAccount()))\n        }, \" Create Account \", 10, _hoisted_8),\n        _createElementVNode(\"button\", {\n          class: _normalizeClass([\"max-h-10 text-white focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\", !_unref(store).state.isInit || !_unref(store).state.isAccount ? 'bg-red-300 hover:bg-red-500 cursor-not-allowed' : 'bg-red-500 hover:bg-red-600']),\n          type: \"button\",\n          disabled: !_unref(store).state.isInit || !_unref(store).state.isAccount,\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (deleteAccount()))\n        }, \" Delete Account \" + _toDisplayString(_unref(store)?.state?.tempAccount?.accountId ? `(${_unref(store)?.state?.tempAccount?.accountId})` : ''), 11, _hoisted_9)\n      ])\n    ], 512), [\n      [_vShow, activeTab.value === 'create']\n    ]),\n    _withDirectives(_createElementVNode(\"div\", null, [\n      _hoisted_10,\n      _createElementVNode(\"div\", _hoisted_11, [\n        _createElementVNode(\"div\", _hoisted_12, [\n          _hoisted_13,\n          _withDirectives(_createElementVNode(\"input\", {\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((mnemonic).value = $event)),\n            type: \"text\",\n            id: \"mnemonic\",\n            class: _normalizeClass([\"bg-gray-50 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\", !_unref(store).state.isInit ? 'text-gray-400 cursor-not-allowed' : 'text-gray-900']),\n            disabled: !_unref(store).state.isInit\n          }, null, 10, _hoisted_14), [\n            [_vModelText, mnemonic.value]\n          ])\n        ]),\n        _createElementVNode(\"button\", {\n          class: _normalizeClass([\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\", !_unref(store).state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600']),\n          disabled: !_unref(store).state.isInit,\n          type: \"button\",\n          onClick: _cache[5] || (_cache[5] = ($event: any) => (searchAccounts()))\n        }, \" Search Accounts \", 10, _hoisted_15)\n      ])\n    ], 512), [\n      [_vShow, activeTab.value === 'import']\n    ]),\n    _withDirectives(_createElementVNode(\"div\", null, [\n      _hoisted_16,\n      _createElementVNode(\"div\", _hoisted_17, [\n        _createElementVNode(\"div\", _hoisted_18, [\n          _hoisted_19,\n          _withDirectives(_createElementVNode(\"input\", {\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((accountId).value = $event)),\n            type: \"text\",\n            id: \"accountId\",\n            class: \"text-gray-400 cursor-not-allowed bg-gray-50 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\",\n            disabled: \"\"\n          }, null, 512), [\n            [_vModelText, accountId.value]\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_20, [\n          _hoisted_21,\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((stake).value = $event)),\n            id: \"stake\",\n            class: _normalizeClass([\"block w-full p-2.5 text-sm border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500\", _unref(store).state.isInit && stakes.value.length <= 1 ? 'text-gray-400 cursor-not-allowed' : 'text-gray-900']),\n            disabled: _unref(store).state.isInit && stakes.value.length <= 1\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(stakes.value, (item) => {\n              return (_openBlock(), _createElementBlock(\"option\", {\n                key: item.value,\n                value: item.value\n              }, _toDisplayString(item.name), 9, _hoisted_23))\n            }), 128))\n          ], 10, _hoisted_22), [\n            [_vModelSelect, stake.value]\n          ])\n        ]),\n        _withDirectives((_openBlock(), _createElementBlock(\"button\", {\n          class: _normalizeClass([\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\", !_unref(store).state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600']),\n          disabled: !_unref(store).state.isInit,\n          type: \"button\",\n          onClick: _cache[8] || (_cache[8] = ($event: any) => (stakeToNode()))\n        }, [\n          _createTextVNode(\" Stake To Node \")\n        ], 10, _hoisted_24)), [\n          [_directive_tooltip, 'Stake/unstake account']\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_25, [\n        _createElementVNode(\"button\", {\n          class: _normalizeClass([\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\", !_unref(store).state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600']),\n          disabled: !_unref(store).state.isInit,\n          type: \"button\",\n          onClick: _cache[9] || (_cache[9] = ($event: any) => (getNodeList()))\n        }, \" Get Node List \", 10, _hoisted_26)\n      ])\n    ], 512), [\n      [_vShow, activeTab.value === 'stake']\n    ]),\n    _createVNode(AppLinksList, { links: links.value }, null, 8, [\"links\"]),\n    _createVNode(AppOutput, {\n      data: output.value,\n      isLoading: progress.value\n    }, null, 8, [\"data\", \"isLoading\"])\n  ], 64))\n}\n}\n\n})","<template>\n  <AppTabs :tabs=\"tabs\" @selectActiveTab=\"selectActiveTab\" />\n\n  <div v-show=\"activeTab === 'create'\">\n    <p class=\"block mb-6 text-sm font-medium text-gray-600\">\n      This section provides a brief introduction to the Blade SDK demo app, highlighting its purpose and key features.\n    </p>\n\n    <div class=\"flex gap-4 flex-wrap mb-6 items-end\">\n      <div class=\"max-w-sm w-full\">\n        <label for=\"tempAccountId\" class=\"block mb-2 text-sm font-medium text-gray-900\">Account Id</label>\n        <input\n          v-model=\"tempAccountId\"\n          type=\"text\"\n          id=\"tempAccountId\"\n          class=\"bg-gray-50 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          :class=\"!store.state.isInit ? 'text-gray-400 cursor-not-allowed' : 'text-gray-900'\"\n          :disabled=\"!store.state.isInit\"\n        >\n      </div>\n\n      <button\n        class=\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\"\n        type=\"button\"\n        :class=\"!store.state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'\"\n        :disabled=\"!store.state.isInit\"\n        @click=\"getAccountInfo()\"\n      >\n        Get Account Info\n      </button>\n    </div>\n\n    <div class=\"flex gap-4 flex-wrap mb-6 items-end\">\n      <button\n        class=\"max-h-10 text-white focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\"\n        :class=\"!store.state.isInit || store.state.isAccount ? 'bg-green-300 hover:bg-green-500 cursor-not-allowed' : 'bg-green-500 hover:bg-green-600'\"\n        :disabled=\"!store.state.isInit || store.state.isAccount\"\n        type=\"button\"\n        @click=\"createAccount()\"\n      >\n        Create Account\n      </button>\n\n      <button\n        class=\"max-h-10 text-white focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\"\n        type=\"button\"\n        :class=\"!store.state.isInit || !store.state.isAccount ? 'bg-red-300 hover:bg-red-500 cursor-not-allowed' : 'bg-red-500 hover:bg-red-600'\"\n        :disabled=\"!store.state.isInit || !store.state.isAccount\"\n        @click=\"deleteAccount()\"\n      >\n        Delete Account {{ store?.state?.tempAccount?.accountId ? `(${store?.state?.tempAccount?.accountId})` : '' }}\n      </button>\n    </div>\n  </div>\n\n  <div v-show=\"activeTab === 'import'\">\n    <p class=\"block mb-6 text-sm font-medium text-gray-600\">\n      Facilitates importing an existing account using a private key or mnemonic phrase.\n    </p>\n\n    <div class=\"flex gap-4 flex-wrap mb-6 items-end\">\n      <div class=\"max-w-sm w-full\">\n        <label for=\"mnemonic\" class=\"block mb-2 text-sm font-medium text-gray-900\">Mnemonic / Message / Signature</label>\n        <input\n          v-model=\"mnemonic\"\n          type=\"text\"\n          id=\"mnemonic\"\n          class=\"bg-gray-50 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          :class=\"!store.state.isInit ? 'text-gray-400 cursor-not-allowed' : 'text-gray-900'\"\n          :disabled=\"!store.state.isInit\"\n        >\n      </div>\n\n      <button\n        class=\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\t\"\n        :class=\"!store.state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'\"\n        :disabled=\"!store.state.isInit\"\n        type=\"button\"\n        @click=\"searchAccounts()\"\n      >\n        Search Accounts\n      </button>\n    </div>\n  </div>\n\n  <div v-show=\"activeTab === 'stake'\">\n    <p class=\"block mb-6 text-sm font-medium text-gray-600\">\n      Enables staking functionalities, including fetching the node list and performing stake/unstake actions.\n    </p>\n\n    <div class=\"flex gap-4 flex-wrap mb-6 items-end\">\n      <div class=\"max-w-sm w-full\">\n        <label for=\"accountId\" class=\"block mb-2 text-sm font-medium text-gray-900\">Account Id</label>\n        <input\n          v-model=\"accountId\"\n          type=\"text\"\n          id=\"accountId\"\n          class=\"text-gray-400 cursor-not-allowed bg-gray-50 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          disabled\n        >\n      </div>\n\n      <div class=\"max-w-sm w-full\">\n        <label for=\"stake\" class=\"block mb-2 text-sm font-medium text-gray-900\">Select a node</label>\n\n        <select\n          v-model=\"stake\"\n          id=\"stake\"\n          class=\"block w-full p-2.5 text-sm border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500\"\n          :class=\"store.state.isInit && stakes.length <= 1 ? 'text-gray-400 cursor-not-allowed' : 'text-gray-900'\"\n          :disabled=\"store.state.isInit && stakes.length <= 1\"\n        >\n          <option\n            v-for=\"item in stakes\"\n            :key=\"item.value\"\n            :value=\"item.value\"\n          >\n            {{ item.name }}\n          </option>\n        </select>\n      </div>\n\n      <button\n        class=\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\t\"\n        :class=\"!store.state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'\"\n        :disabled=\"!store.state.isInit\"\n        type=\"button\"\n        @click=\"stakeToNode()\"\n        v-tooltip=\"'Stake/unstake account'\"\n      >\n        Stake To Node\n      </button>\n    </div>\n\n    <div class=\"flex gap-4 flex-wrap mb-6 items-end\">\n      <button\n          class=\"max-h-10 text-white focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 whitespace-nowrap\t\"\n          :class=\"!store.state.isInit ? 'bg-indigo-300 hover:bg-indigo-500 cursor-not-allowed' : 'bg-indigo-500 hover:bg-indigo-600'\"\n          :disabled=\"!store.state.isInit\"\n          type=\"button\"\n          @click=\"getNodeList()\"\n        >\n          Get Node List\n        </button>\n    </div>\n  </div>\n\n  <AppLinksList :links=\"links\" />\n\n  <AppOutput :data=\"output\" :isLoading=\"progress\" />\n</template>\n\n<script lang=\"ts\" setup>\n  import AppOutput from '../components/AppOutput.vue'\n  import AppTabs from '../components/AppTabs.vue'\n  import AppLinksList from '../components/AppLinksList.vue'\n\n  import { demoConfig } from '../config/demoConfig'\n  import { BladeService } from '../services/BladeService'\n\n  import { ref, onMounted } from 'vue'\n  import { useStore } from 'vuex'\n\n  const store = useStore()\n\n  const bladeSDK = BladeService.getInstance()\n\n  const output = ref(store.state.output)\n  const progress = ref(false)\n\n  const accountId = ref(demoConfig.accountId)\n  const tempAccountId = ref(demoConfig.accountId)\n  const mnemonic = ref(demoConfig.mnemonic)\n\n  const stakes = ref([\n    { name: 'Unstake', value: '-1' },\n  ])\n  const stake = ref('-1')\n  const tabs = ref([\n    { name: 'Create', value: 'create' },\n    { name: 'Mnemonic or Private key', value: 'import' },\n    { name: 'Stake', value: 'stake' }\n  ])\n  const activeTab = ref(null)\n\n  const links = ref([\n    { url: 'getaccountinfo', name: 'Get Account Info' },\n    { url: 'createaccount', name: 'Create Account' },\n    { url: 'deleteaccount', name: 'Delete Account' },\n    { url: 'searchaccounts', name: 'Search Accounts' },\n    { url: 'staketonode', name: 'Stake To Node' },\n    { url: 'getnodelist', name: 'Get Node List' },\n  ])\n\n  const selectActiveTab = (value: any) => {\n    activeTab.value = value\n\n    getInfo()\n  }\n\n  const createAccount = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.createAccount()\n\n      tempAccountId.value = output.value.accountId\n\n      store.dispatch('setTempAccount', output.value)\n      store.dispatch('setAccount')\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false;\n  }\n\n  const getAccountInfo = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.getAccountInfo(accountId.value)\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const deleteAccount = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.deleteAccount(store.state.tempAccount.accountId, store.state.tempAccount.privateKey, demoConfig.accountId, demoConfig.accountId, demoConfig.privateKey)\n      store.dispatch('setTempAccount', null)\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const getNodeList = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.getNodeList()\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const stakeToNode = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.stakeToNode(accountId.value, demoConfig.privateKey, Number(stake.value))\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const searchAccounts = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.searchAccounts(mnemonic.value)\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  const getInfo = async () => {\n    progress.value = true\n\n    try {\n      output.value = await bladeSDK.getInfo()\n    } catch (error) {\n      output.value = error\n    }\n\n    progress.value = false\n  }\n\n  onMounted(async() => {\n    getInfo()\n\n    if (store.state.isInit) {\n      const nodeList = await bladeSDK.getNodeList()\n  \n      nodeList.nodes.forEach((node: any) => {\n        stakes.value.push({\n          name: `${node.node_id}: ${node.description}`,\n          value: node.node_id\n        })\n      })\n\n      const accountInfo = await bladeSDK.getAccountInfo(accountId.value)\n\n      stake.value = String(accountInfo?.stakingInfo?.stakedNodeId)\n    }\n  })\n</script>\n","import script from \"./Account.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Account.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["props","emit","isActive","selectActiveTab","tabValue","tabs","forEach","tab","value","__exports__","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","for","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","__name","setup","__props","store","bladeSDK","BladeService","getInstance","output","state","progress","accountId","demoConfig","tempAccountId","mnemonic","stakes","name","stake","activeTab","links","url","getInfo","createAccount","dispatch","getAccountInfo","deleteAccount","tempAccount","privateKey","getNodeList","stakeToNode","Number","searchAccounts","isInit","nodeList","nodes","node","push","node_id","description","accountInfo","String","stakingInfo","stakedNodeId","_ctx","_cache","_directive_tooltip","AppTabs","A","onSelectActiveTab","$event","type","id","disabled","onClick","isAccount","length","item","key","AppLinksList","AppOutput","data","isLoading"],"sourceRoot":""}